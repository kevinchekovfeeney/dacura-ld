<?php
/*
 * Browse Service - provides access to home page of collection and system.
 *
 * Created By: Chekov
 * Contributors:
 * Creation Date: 01/03/2015
 * Licence: GPL v2
 */
include_once("BrowseDacuraServer.php");

class BrowseService extends DacuraService {
	
	var $collection_context;
	var $public_screens = array();
	var $protected_screens = array("view" => array("user"));
	var $services;

	
	function init(){
		parent::init();
		$this->services =  $this->getServiceSetting("services");		
	}
	
	function getSingleButtonParams($id, $sb){
		if(!isset($sb["url"])){
			if($id == "ontology"){
				$sb["url"] = $this->getSystemSetting('install_url')."schema";				
			}
			else {
				$sb["url"] = $id;
				$sb["url"] = $this->get_service_url($sb["url"]);
			}
		}
		if(!isset($sb["img"])){
			$sb["img"] = $id;
		}
		$sb["img"] = $this->furl("file", "buttons/".$sb["img"].".png");
		$ent = $this->getCollectionID() == "all" ? "System" : "Dataset";
		$sb['help'] = str_replace("ENTITY", $ent, $sb['help']);
		$sb['title'] = str_replace("ENTITY", $ent, $sb['title']);
		return $sb;
	}
	
	function userCanSee($user, $srvc){
		$req_role = $srvc['role'];
		if(!isset($req_role[1]) or $req_role[1] === false) $req_role[1] = $this->getCollectionID();
		if($user->hasSufficientRole($req_role[0], $req_role[1])){
			return true;
		}
		return false;		
	}
	
	function getServiceButtonParams($user){
		$params = array();
		foreach(array("internal", "data", "tool") as $stype){
			foreach($this->services[$stype] as $id => $is){
				$sb = $this->getSingleButtonParams($id, $is);
				if($this->userCanSee($user, $sb)){
					$params[$stype."_services"][] = $sb;
				}
			}
		}
		return $params;		
	}
	
	function getServiceContextLinks(){
		return array();
	}
	
	function getScreenForCall(&$dacura_server){
		return "view";
	}
	
	//suppress these as we are not in a tool context
	function renderToolHeader($p){}
	function renderToolFooter($p){}
	function writeBodyHeader(&$dacura_server){}
	function writeBodyFooter(&$dacura_server){}
	
	function getParamsForScreen($screen, $dacura_server){
		$user = $dacura_server->getUser();
		$params = $dacura_server->getMenuPanelParams();
		$cparams = $dacura_server->loadContextParams();
		$params = array_merge($this->getServiceButtonParams($user), $params);
		$nparams = $dacura_server->getStatusParams();
		$params['collection_blurb'] = $this->renderScreenAsString("status", $nparams);
		if($this->getCollectionID() == 'all'){
			$params['collection_logo'] = $params['system_logo'];//array();
		}
		return $params;
	}	
}
